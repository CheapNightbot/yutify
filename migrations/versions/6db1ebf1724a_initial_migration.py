"""initial migration

Revision ID: 6db1ebf1724a
Revises:
Create Date: 2025-05-05 03:26:18.297407

"""
import flask_security as fs
import sqlalchemy as sa
from alembic import op

import app.models as mo

# revision identifiers, used by Alembic.
revision = '6db1ebf1724a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('permissions', fs.datastore.AsaList(), nullable=True),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('access_token', mo.Encrypted(), nullable=True),
    sa.Column('expires_in', sa.Integer(), nullable=True),
    sa.Column('requested_at', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_services_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('about_me', sa.String(length=64), nullable=True),
    sa.Column('avatar', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=64), nullable=True),
    sa.Column('current_login_ip', sa.String(length=64), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
    sa.Column('tf_primary_method', sa.String(length=64), nullable=True),
    sa.Column('mf_recovery_codes', fs.datastore.AsaList(), nullable=True),
    sa.Column('tf_totp_secret', sa.String(length=255), nullable=True),
    sa.Column('us_totp_secrets', sa.Text(), nullable=True),
    sa.Column('tf_phone_number', sa.String(length=128), nullable=True),
    sa.Column('us_phone_number', sa.String(length=128), nullable=True),
    sa.Column('fs_webauthn_user_handle', sa.String(length=64), nullable=True),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('fs_uniquifier'),
    sa.UniqueConstraint('fs_webauthn_user_handle'),
    sa.UniqueConstraint('us_phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('user_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=True),
    sa.Column('profile_url', sa.String(length=256), nullable=True),
    sa.Column('access_token', mo.Encrypted(), nullable=True),
    sa.Column('refresh_token', mo.Encrypted(), nullable=True),
    sa.Column('expires_in', sa.Integer(), nullable=True),
    sa.Column('requested_at', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'service_id', name='uq_user_service')
    )
    with op.batch_alter_table('user_services', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_services_service_id'), ['service_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_services_user_id'), ['user_id'], unique=False)

    op.create_table('webauthn',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credential_id', sa.LargeBinary(length=1024), nullable=False),
    sa.Column('public_key', sa.LargeBinary(), nullable=False),
    sa.Column('sign_count', sa.Integer(), nullable=True),
    sa.Column('transports', fs.datastore.AsaList(), nullable=True),
    sa.Column('backup_state', sa.Boolean(), nullable=False),
    sa.Column('device_type', sa.String(length=64), nullable=False),
    sa.Column('extensions', sa.String(length=255), nullable=True),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('lastuse_datetime', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('usage', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('webauthn', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_webauthn_credential_id'), ['credential_id'], unique=True)

    op.create_table('users_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_service_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_service_id'], ['user_services.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_service_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_data')
    with op.batch_alter_table('webauthn', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_webauthn_credential_id'))

    op.drop_table('webauthn')
    with op.batch_alter_table('user_services', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_services_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_services_service_id'))

    op.drop_table('user_services')
    op.drop_table('roles_users')
    op.drop_table('users')
    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_services_name'))

    op.drop_table('services')
    op.drop_table('roles')
    # ### end Alembic commands ###
